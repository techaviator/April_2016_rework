<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="JIM-TI8227" name="Default test" tests="3" failures="0" timestamp="29 May 2016 05:06:06 GMT" time="1.43" errors="0">
  <testcase name="@BeforeMethod launchbrowser" time="0.0" classname="testscripts.Login_Scenario_TC">
    <failure type="java.lang.IllegalStateException" message="The driver executable does not exist: D:\JavaWorkspace_2016\April_2016_batch\April2016batch\src\test\resources\chromedriver.exe">
      <![CDATA[java.lang.IllegalStateException: The driver executable does not exist: D:\JavaWorkspace_2016\April_2016_batch\April2016batch\src\test\resources\chromedriver.exe
	at com.google.common.base.Preconditions.checkState(Preconditions.java:197)
	at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:121)
	at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:116)
	at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:32)
	at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:137)
	at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:290)
	at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:88)
	at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:116)
	at generic.Base_Class.launchbrowser(Base_Class.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:510)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:211)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:585)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:112)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:205)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:176)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod launchbrowser -->
  <testcase name="@AfterMethod tear_down" time="0.0" classname="testscripts.Login_Scenario_TC">
    <skipped/>
  </testcase> <!-- @AfterMethod tear_down -->
  <testcase name="@BeforeMethod launchbrowser" time="0.0" classname="testscripts.Login_Scenario_TC">
    <skipped/>
  </testcase> <!-- @BeforeMethod launchbrowser -->
  <testcase name="@AfterMethod tear_down" time="0.0" classname="testscripts.Login_Scenario_TC">
    <skipped/>
  </testcase> <!-- @AfterMethod tear_down -->
  <testcase name="@BeforeMethod launchbrowser" time="0.0" classname="testscripts.Login_Scenario_TC">
    <skipped/>
  </testcase> <!-- @BeforeMethod launchbrowser -->
  <testcase name="@AfterMethod tear_down" time="0.0" classname="testscripts.Login_Scenario_TC">
    <skipped/>
  </testcase> <!-- @AfterMethod tear_down -->
  <testcase name="Invalid_login_Test" time="0.001" classname="testscripts.Login_Scenario_TC">
    <skipped/>
  </testcase> <!-- Invalid_login_Test -->
  <testcase name="Invalid_login_Test" time="0.002" classname="testscripts.Login_Scenario_TC">
    <skipped/>
  </testcase> <!-- Invalid_login_Test -->
  <testcase name="Valid_login_Test" time="0.001" classname="testscripts.Login_Scenario_TC">
    <skipped/>
  </testcase> <!-- Valid_login_Test -->
</testsuite> <!-- Default test -->
